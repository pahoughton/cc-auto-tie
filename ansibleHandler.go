/* 2018-12-20 (cc) <paul4hough@gmail.com>
   FIXME what is this for?
*/
package main

import (
	"bytes"
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"
	"os"

	log "github.com/sirupsen/logrus"
)

type AutoGenerated struct {
	Receiver string `json:"receiver"`
	Status string `json:"status"`
	Alerts []struct {
		Status string `json:"status"`
		Labels struct {
			Alertname string `json:"alertname"`
			Ansible string `json:"ansible"`
			Groupname string `json:"groupname"`
			Instance string `json:"instance"`
			Job string `json:"job"`
		} `json:"labels"`
		Annotations struct {
			Description string `json:"description"`
		} `json:"annotations"`
		StartsAt string `json:"startsAt"`
		EndsAt string `json:"endsAt"`
		GeneratorURL string `json:"generatorURL"`
	} `json:"alerts"`
	GroupLabels struct {
		Alertname string `json:"alertname"`
		Instance string `json:"instance"`
	} `json:"groupLabels"`
	CommonLabels struct {
		Alertname string `json:"alertname"`
		Ansible string `json:"ansible"`
		Groupname string `json:"groupname"`
		Instance string `json:"instance"`
		Job string `json:"job"`
	} `json:"commonLabels"`
	CommonAnnotations struct {
		Description string `json:"description"`
	} `json:"commonAnnotations"`
	ExternalURL string `json:"externalURL"`
	Version string `json:"version"`
	GroupKey string `json:"groupKey"`
}

func ansibleHandler(
	w http.ResponseWriter,
	r *http.Request ) {

	log.Debug("ansible recvd")

	ansibleRecvd.Inc()

	b, err := ioutil.ReadAll(r.Body)
	if err != nil {
		panic(err)
	}
	defer r.Body.Close()

	// debug - format json
	var buf bytes.Buffer
	if err := json.Indent(&buf, b, " >", "  "); err != nil {
		panic(err)
	}
	fmt.Fprintf(os.Stderr,"req body\n%s\n",buf.String())

	createTicket(AnsibleAlertType, b)

	log.Debug("ansible complete")
}
